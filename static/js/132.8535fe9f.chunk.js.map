{"version":3,"file":"static/js/132.8535fe9f.chunk.js","mappings":"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","sources":["pages/MovieDetail/MovieDetail.styled.js","pages/MovieDetail/MovieDetail.jsx","services/movieAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetailTitle = styled.h1``;\nexport const MovieDetailSubTitle = styled.h2``;\nexport const MovieDetailText = styled.p``;\nexport const MoreInfoLinks = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  padding-left: 0px;\n`;\nexport const MoreInfoLinksItem = styled.li``;\nexport const StyledLink = styled(NavLink)`\n  display: inline-block;\n  padding: 7px;\n  margin-bottom: 5px;\n  border: 1px solid black;\n  background-color: lightblue;\n  text-decoration: none;\n  border-radius: 10px;\n  color: black;\n  &:hover {\n    color: tomato;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  display: inline-block;\n  padding: 10px;\n  margin: 10px 0px 10px 10px;\n  border: 1px solid black;\n  background-color: lightblue;\n  text-decoration: none;\n  border-radius: 10px;\n  color: black;\n\n  &:hover {\n    color: tomato;\n  }\n`;\nexport const MovieDetailWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n`;\n\nexport const MovieDetailSubWrapper = styled.div`\n  height: 60vh;\n`;\nexport const PosterMovie = styled.img`\n  width: 500px;\n  height: 100%;\n  border-radius: 18px;\n  object-position: center;\n  padding-left: 10px;\n`;\n","import { getMoviesDetails } from 'services/movieAPI';\nimport { useLocation, useNavigate, useParams, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\n\nimport {\n  MovieDetailWrapper,\n  MovieDetailSubWrapper,\n  StyledLink,\n  StyledButton,\n  MoreInfoLinks,\n  PosterMovie,\n  MovieDetailTitle,\n  MovieDetailText,\n  MovieDetailSubTitle,\n  MoreInfoLinksItem,\n} from './MovieDetail.styled';\n\nfunction MovieDetail() {\n  const [details, setDetails] = useState([]);\n  const params = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    try {\n      async function fetchMovieDetail() {\n        const result = await getMoviesDetails(params.movieId);\n        setDetails(result);\n      }\n      fetchMovieDetail();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [params]);\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    details;\n  return (\n    <>\n      <StyledButton type=\"button\" onClick={() => navigate(backLink)}>\n        Go-back\n      </StyledButton>\n      <MovieDetailWrapper>\n        {poster_path && (\n          <PosterMovie\n            src={`https://image.tmdb.org/t/p/original${poster_path}`}\n          />\n        )}\n        <MovieDetailSubWrapper>\n          <MovieDetailTitle>\n            {details && title} ({details && parseInt(release_date)})\n          </MovieDetailTitle>\n          <MovieDetailText>\n            Userscore: {vote_average && vote_average}\n          </MovieDetailText>\n          <MovieDetailSubTitle>Overview</MovieDetailSubTitle>\n          <MovieDetailText>{overview && overview}</MovieDetailText>\n          <MovieDetailSubTitle>Genres</MovieDetailSubTitle>\n          <MovieDetailText>\n            {genres && genres.map(genre => genre.name).join(' & ')}\n          </MovieDetailText>\n          <MovieDetailSubWrapper>\n            <MovieDetailSubTitle>See more</MovieDetailSubTitle>\n            <MoreInfoLinks>\n              <MoreInfoLinksItem>\n                <StyledLink to=\"cast\" state={{ from: location.state?.from }}>\n                  Cast\n                </StyledLink>\n              </MoreInfoLinksItem>\n              <MoreInfoLinksItem>\n                <StyledLink to=\"reviews\" state={{ from: location.state?.from }}>\n                  Reviews\n                </StyledLink>\n              </MoreInfoLinksItem>\n            </MoreInfoLinks>\n          </MovieDetailSubWrapper>\n        </MovieDetailSubWrapper>\n      </MovieDetailWrapper>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetail;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `7936da9f8864de7ea98146d0f43f51e5`,\n  include_adult: false,\n  language: 'en-US',\n};\n\nexport const getMoviesByQuery = async (query = '') => {\n  try {\n    const urlParam = query\n      ? `/search/movie?&query=${query}`\n      : `/movie/upcoming`;\n    const { data } = await axios.get(urlParam);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport async function getMovies() {\n  try {\n    const { data } = await axios.get('/trending/movie/day');\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n}\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\nexport const getMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n"],"names":["MovieDetailTitle","styled","MovieDetailSubTitle","MovieDetailText","MoreInfoLinks","MoreInfoLinksItem","StyledLink","NavLink","StyledButton","MovieDetailWrapper","MovieDetailSubWrapper","PosterMovie","useState","details","setDetails","params","useParams","navigate","useNavigate","location","useLocation","backLink","state","from","useEffect","fetchMovieDetail","getMoviesDetails","movieId","result","error","console","log","poster_path","title","release_date","vote_average","overview","genres","type","onClick","src","parseInt","map","genre","name","join","to","Suspense","fallback","axios","api_key","include_adult","language","getMoviesByQuery","query","urlParam","data","results","Error","getMovies","getMoviesCast","id","cast","getMoviesReviews"],"sourceRoot":""}