{"version":3,"file":"static/js/156.0504e1b8.chunk.js","mappings":"6QAEaA,EAAaC,EAAAA,GAAAA,GAAH,8DAKVC,EAAYD,EAAAA,GAAAA,GAAH,oEAKTE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uG,kBCyBjB,MAhCA,WACE,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAK,IACYC,EADb,mCACF,qGACuBC,EAAAA,EAAAA,MADvB,OACQC,EADR,OAEEN,EAAUM,GAFZ,2CADE,qDAKFF,GAGD,CAFC,MAAOG,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,KAGD,SAAC,EAAAG,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAClB,EAAD,UACGM,EAAOa,KAAI,SAAAC,GACV,OACE,SAAClB,EAAD,WACE,SAACC,EAAD,CAAMkB,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMhB,GAA/C,SACGY,EAAMK,SAFKL,EAAME,GAMzB,OAIR,C,+LClCDI,EAAAA,EAAAA,SAAAA,QAAA,+BACAA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,mCACRC,eAAe,EACfC,SAAU,SAGL,IAAMC,EAAgB,mCAAG,6GAAOC,EAAP,+BAAe,GAAf,SAEtBC,EAAWD,EAAK,+BACMA,GADN,kBAFM,SAKLL,EAAAA,EAAAA,IAAUM,GALL,uBAKpBC,EALoB,EAKpBA,KALoB,kBAMrBA,EAAKC,SANgB,wCAQtB,IAAIC,MAAM,2BARY,0DAAH,qDAYtB,SAAevB,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBc,EAAAA,EAAAA,IAAU,uBAF9B,uBAEKO,EAFL,EAEKA,KAFL,kBAGIA,EAAKC,SAHT,sCAKG,IAAIC,MAAM,4BALb,gFASA,IAAMC,EAAgB,mCAAG,WAAMC,GAAN,kGAELX,EAAAA,EAAAA,IAAA,gBAAmBW,IAFd,uBAEpBJ,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,sCAKtB,IAAIE,MAAM,gCALY,yDAAH,sDAQhBG,EAAa,mCAAG,WAAMD,GAAN,kGAEFX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,YAAsC,CAC3DE,OAAQ,CACNjB,GAAIe,EACJR,SAAU,WALW,uBAEjBI,EAFiB,EAEjBA,KAFiB,kBAQlBA,EAAKO,MARa,sCAUnB,IAAIL,MAAM,gCAVS,yDAAH,sDAcbM,EAAgB,mCAAG,WAAMJ,GAAN,kGAELX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,YAAsC,CAC3DE,OAAQ,CACNjB,GAAIe,EACJR,SAAU,WALc,uBAEpBI,EAFoB,EAEpBA,KAFoB,kBAQrBA,EAAKC,SARgB,sCAUtB,IAAIC,MAAM,mCAVY,yDAAH,qD","sources":["pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","services/movieAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nexport const MoviesList = styled.ul`\n  list-style: none;\n  height: 100%;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  &:hover {\n    color: gray;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MoviesList, MovieItem, Link } from './HomePage.styled';\nimport { getMovies } from 'services/movieAPI';\n\nfunction HomePage() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    try {\n      async function fetchMovies() {\n        const result = await getMovies();\n        setMovies(result);\n      }\n      fetchMovies();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <MoviesList>\n        {movies.map(movie => {\n          return (\n            <MovieItem key={movie.id}>\n              <Link to={`movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </MovieItem>\n          );\n        })}\n      </MoviesList>\n    </Suspense>\n  );\n}\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `7936da9f8864de7ea98146d0f43f51e5`,\n  include_adult: false,\n  language: 'en-US',\n};\n\nexport const getMoviesByQuery = async (query = '') => {\n  try {\n    const urlParam = query\n      ? `/search/movie?&query=${query}`\n      : `/movie/upcoming`;\n    const { data } = await axios.get(urlParam);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport async function getMovies() {\n  try {\n    const { data } = await axios.get('/trending/movie/day');\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n}\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\nexport const getMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n"],"names":["MoviesList","styled","MovieItem","Link","NavLink","useState","movies","setMovies","location","useLocation","useEffect","fetchMovies","getMovies","result","error","console","log","Suspense","fallback","map","movie","to","id","state","from","title","axios","api_key","include_adult","language","getMoviesByQuery","query","urlParam","data","results","Error","getMoviesDetails","movieId","getMoviesCast","params","cast","getMoviesReviews"],"sourceRoot":""}