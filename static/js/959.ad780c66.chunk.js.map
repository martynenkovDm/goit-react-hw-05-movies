{"version":3,"file":"static/js/959.ad780c66.chunk.js","mappings":"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","sources":["pages/MoviePage/MoviePage.styled.js","pages/MoviePage/MoviePage.jsx","services/movieAPI.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  padding-top: 10px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  padding: 10px;\n  margin-left: 10px;\n  margin-bottom: 5px;\n  background-color: lightblue;\n  text-decoration: none;\n  border-radius: 10px;\n  color: black;\n\n  &:hover {\n    color: tomato;\n  }\n`;\nexport const SearchInput = styled.input`\n  border: 1px solid black;\n  padding: 10px;\n  margin-left: 10px;\n  &:hover {\n    border: 1px solid black;\n    border-color: aqua;\n  }\n`;\nexport const MoviesList = styled.ul`\n  list-style: none;\n`;\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\nexport const MovieLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  &:hover {\n    color: gray;\n  }\n  &:visited {\n    color: red;\n  }\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  SearchButton,\n  SearchForm,\n  SearchInput,\n  MoviesList,\n  MovieItem,\n  MovieLink,\n} from './MoviePage.styled';\nimport { getMoviesByQuery } from 'services/movieAPI';\n\nfunction MoviePage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [status, setStatus] = useState('idle');\n  const searchQuery = searchParams.get('q') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovieByQuery() {\n      const result = await getMoviesByQuery(searchQuery);\n      if (result.length === 0) {\n        console.log('Nothing founded!!');\n        return;\n      }\n      setStatus('loaded');\n      setMovies(result);\n    }\n    if (!searchQuery) {\n      return;\n    }\n    fetchMovieByQuery();\n  }, [searchQuery]);\n\n  const onHandleChange = ({ target }) => {\n    setInputValue(target.value);\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(inputValue ? { q: inputValue } : {});\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={onHandleSubmit}>\n        <SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={inputValue}\n          placeholder=\"Input search query\"\n          onChange={onHandleChange}\n        />\n        <SearchButton type=\"submit\">\n          <span>Search</span>\n        </SearchButton>\n      </SearchForm>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        {status === 'rejected' && <div>Nothing found!</div>}\n        {status === 'loaded' && (\n          <MoviesList>\n            {movies.map(movie => (\n              <MovieItem key={movie.id}>\n                <MovieLink\n                  to={`/movies/${movie.id.toString()}`}\n                  state={{ from: location }}>\n                  {movie.title}\n                </MovieLink>\n              </MovieItem>\n            ))}\n          </MoviesList>\n        )}\n      </Suspense>\n    </>\n  );\n}\nexport default MoviePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `7936da9f8864de7ea98146d0f43f51e5`,\n  include_adult: false,\n  language: 'en-US',\n};\n\nexport const getMoviesByQuery = async (query = '') => {\n  try {\n    const urlParam = query\n      ? `/search/movie?&query=${query}`\n      : `/movie/upcoming`;\n    const { data } = await axios.get(urlParam);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport async function getMovies() {\n  try {\n    const { data } = await axios.get('/trending/movie/day');\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n}\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\nexport const getMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n"],"names":["SearchForm","styled","SearchButton","SearchInput","MoviesList","MovieItem","MovieLink","NavLink","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","inputValue","setInputValue","status","setStatus","searchQuery","get","location","useLocation","useEffect","getMoviesByQuery","result","length","console","log","fetchMovieByQuery","onSubmit","e","preventDefault","q","type","autoComplete","autoFocus","value","placeholder","onChange","target","Suspense","fallback","map","movie","to","id","toString","state","from","title","axios","api_key","include_adult","language","query","urlParam","data","results","Error","getMovies","getMoviesDetails","movieId","getMoviesCast","params","cast","getMoviesReviews"],"sourceRoot":""}